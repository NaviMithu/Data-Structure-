Single File Programming Question
Rakesh gets to know that binary numbers are formed with just 0 and 1. He gets excited and decides to find all the binary numbers starting from 1 by adding/replacing a 0 or 1. 

For example, after 1, he adds a 0 to it and arrives 10. Then, he replaces 0 with 1 to get 11 as the next digit and so on. Upon seeing the work, his mentor planned to play a game with him where Rakesh will be given a number N and he has to arrive at the first N binary numbers using this method.

To check the correctness of Rakesh, his mentor decided to build a code that does the same process. Since he is not well-versed in programming he has employed you to do the same. Since you are good at data structures, you think queues will be of good use in this scenario.



Input format :
Single line input to get a positive integer

Output format :
Output displays the first N binary values starting from 1.

Code constraints :
N > 0.

Sample test cases :
Input 1 :
5
Output 1 :
1
10
11
100
101
Input 2 :
3
Output 2 :
1
10
11
#include <iostream>
#include <algorithm>
using namespace std;
struct Node{
    string data;
    Node*next;
};
Node*head=nullptr;
Node*tail=nullptr;
void ins(string n){
    Node*newn=new Node();
    newn->data=n;
    newn->next=NULL;
    if(head==nullptr){
        head=newn;
        tail=newn;
    }
    else{
        tail->next=newn;
        tail=newn;
    }
}
void bin(int n){
    string s="";
    while(n>0){
        s+=(n%2)+'0';
        n=n/2;
    }
    reverse(s.begin(),s.end());
    
    ins(s);
}
void display(){
    Node*temp=head;
    while(temp!=NULL){
        cout<<temp->data<<endl;
        temp=temp->next;
    }
}
int main(){
    int n;
    cin>>n;
    for(int i=1;i<=n;i++){
        bin(i);
    }
    display();
}
